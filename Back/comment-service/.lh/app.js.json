{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1744731481681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744732394037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,22 @@\n const express = require('express');\r\n+const bodyParser = require('body-parser');\r\n+const commentRoutes = require('./routes/commentRoutes'); // <-- ton routeur\r\n+\r\n const app = express();\r\n-const commentRoutes = require('./routes/commentRoutes');\r\n+const PORT = 5000;\r\n \r\n-app.use(express.json());\r\n-app.use('/comments', commentRoutes);\r\n+app.use(bodyParser.json());\r\n \r\n-const PORT = process.env.PORT || 3000;\r\n+app.use('/comments', commentRoutes); // <-- l'URL de base pour les commentaires\r\n+\r\n app.listen(PORT, () => {\r\n   console.log(`Comment service running on port ${PORT}`);\r\n });\r\n+\r\n+// gestionnaire d‚Äôerreurs global\r\n+process.on('uncaughtException', function (err) {\r\n+  console.error('Erreur non attrap√©e :', err);\r\n+});\r\n+process.on('unhandledRejection', (reason, promise) => {\r\n+  console.error('Rejection non g√©r√©e :', reason);\r\n+});\r\n"
                },
                {
                    "date": 1744732658809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,24 @@\n const express = require('express');\r\n const bodyParser = require('body-parser');\r\n-const commentRoutes = require('./routes/commentRoutes'); // <-- ton routeur\r\n+const fs = require('fs');\r\n+const path = require('path');\r\n \r\n const app = express();\r\n const PORT = 5000;\r\n \r\n+// üîπ Cr√©ation du dossier comments s'il n'existe pas\r\n+const commentsDir = path.join(__dirname, 'comments');\r\n+\r\n+if (!fs.existsSync(commentsDir)) {\r\n+  fs.mkdirSync(commentsDir);\r\n+  console.log('Dossier \"comments\" cr√©√©.');\r\n+}\r\n+\r\n+const commentRoutes = require('./routes/commentRoutes');\r\n+\r\n app.use(bodyParser.json());\r\n+app.use('/comments', commentRoutes);\r\n \r\n-app.use('/comments', commentRoutes); // <-- l'URL de base pour les commentaires\r\n-\r\n app.listen(PORT, () => {\r\n   console.log(`Comment service running on port ${PORT}`);\r\n });\r\n-\r\n-// gestionnaire d‚Äôerreurs global\r\n-process.on('uncaughtException', function (err) {\r\n-  console.error('Erreur non attrap√©e :', err);\r\n-});\r\n-process.on('unhandledRejection', (reason, promise) => {\r\n-  console.error('Rejection non g√©r√©e :', reason);\r\n-});\r\n"
                },
                {
                    "date": 1744732886947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,20 +5,25 @@\n \r\n const app = express();\r\n const PORT = 5000;\r\n \r\n-// üîπ Cr√©ation du dossier comments s'il n'existe pas\r\n+// Cr√©ation du dossier \"comments\" s'il n'existe pas\r\n const commentsDir = path.join(__dirname, 'comments');\r\n \r\n if (!fs.existsSync(commentsDir)) {\r\n   fs.mkdirSync(commentsDir);\r\n   console.log('Dossier \"comments\" cr√©√©.');\r\n }\r\n \r\n+// Import des routes\r\n const commentRoutes = require('./routes/commentRoutes');\r\n \r\n+// Middleware pour parser le JSON dans le corps des requ√™tes\r\n app.use(bodyParser.json());\r\n+\r\n+// Utilisation des routes\r\n app.use('/comments', commentRoutes);\r\n \r\n+// D√©marrage du serveur\r\n app.listen(PORT, () => {\r\n   console.log(`Comment service running on port ${PORT}`);\r\n });\r\n"
                },
                {
                    "date": 1744733184402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   console.log('Dossier \"comments\" cr√©√©.');\r\n }\r\n \r\n // Import des routes\r\n-const commentRoutes = require('./routes/commentRoutes');\r\n+const commentRoutes = require('./routes/commen');\r\n \r\n // Middleware pour parser le JSON dans le corps des requ√™tes\r\n app.use(bodyParser.json());\r\n \r\n"
                },
                {
                    "date": 1744735328153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,35 @@\n const express = require('express');\r\n const bodyParser = require('body-parser');\r\n+const path = require('path');\r\n const fs = require('fs');\r\n-const path = require('path');\r\n+const cors = require('cors'); // Ajout de CORS\r\n \r\n const app = express();\r\n-const PORT = 5000;\r\n+const PORT = process.env.PORT || 5000;\r\n \r\n-// Cr√©ation du dossier \"comments\" s'il n'existe pas\r\n-const commentsDir = path.join(__dirname, 'comments');\r\n+// Middlewares\r\n+app.use(cors()); // Enable CORS\r\n+app.use(bodyParser.json());\r\n+app.use(bodyParser.urlencoded({ extended: true }));\r\n \r\n-if (!fs.existsSync(commentsDir)) {\r\n-  fs.mkdirSync(commentsDir);\r\n-  console.log('Dossier \"comments\" cr√©√©.');\r\n+// Create comments directory if not exists\r\n+const COMMENTS_DIR = path.join(__dirname, 'comments');\r\n+if (!fs.existsSync(COMMENTS_DIR)) {\r\n+  fs.mkdirSync(COMMENTS_DIR, { recursive: true });\r\n+  console.log('Comments directory created');\r\n }\r\n \r\n-// Import des routes\r\n-const commentRoutes = require('./routes/commen');\r\n+// Routes\r\n+const commentRoutes = require('./routes/commentRoutes');\r\n+app.use('/api/comments', commentRoutes); // Pr√©fixe API\r\n \r\n-// Middleware pour parser le JSON dans le corps des requ√™tes\r\n-app.use(bodyParser.json());\r\n+// Error handling middleware\r\n+app.use((err, req, res, next) => {\r\n+  console.error(err.stack);\r\n+  res.status(500).json({ error: 'Something went wrong!' });\r\n+});\r\n \r\n-// Utilisation des routes\r\n-app.use('/comments', commentRoutes);\r\n-\r\n-// D√©marrage du serveur\r\n+// Start server\r\n app.listen(PORT, () => {\r\n   console.log(`Comment service running on port ${PORT}`);\r\n-});\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744735336782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,29 @@\n const express = require('express');\r\n const bodyParser = require('body-parser');\r\n+const fs = require('fs');\r\n const path = require('path');\r\n-const fs = require('fs');\r\n-const cors = require('cors'); // Ajout de CORS\r\n \r\n const app = express();\r\n-const PORT = process.env.PORT || 5000;\r\n+const PORT = 5000;\r\n \r\n-// Middlewares\r\n-app.use(cors()); // Enable CORS\r\n-app.use(bodyParser.json());\r\n-app.use(bodyParser.urlencoded({ extended: true }));\r\n+// Cr√©ation du dossier \"comments\" s'il n'existe pas\r\n+const commentsDir = path.join(__dirname, 'comments');\r\n \r\n-// Create comments directory if not exists\r\n-const COMMENTS_DIR = path.join(__dirname, 'comments');\r\n-if (!fs.existsSync(COMMENTS_DIR)) {\r\n-  fs.mkdirSync(COMMENTS_DIR, { recursive: true });\r\n-  console.log('Comments directory created');\r\n+if (!fs.existsSync(commentsDir)) {\r\n+  fs.mkdirSync(commentsDir);\r\n+  console.log('Dossier \"comments\" cr√©√©.');\r\n }\r\n \r\n-// Routes\r\n+// Import des routes\r\n const commentRoutes = require('./routes/commentRoutes');\r\n-app.use('/api/comments', commentRoutes); // Pr√©fixe API\r\n \r\n-// Error handling middleware\r\n-app.use((err, req, res, next) => {\r\n\\ No newline at end of file\n-  console.error(err.stack);\r\n-  res.status(500).json({ error: 'Something went wrong!' });\r\n-});\r\n+// Middleware pour parser le JSON dans le corps des requ√™tes\r\n+app.use(bodyParser.json());\r\n \r\n-// Start server\r\n+// Utilisation des routes\r\n+app.use('/comments', commentRoutes);\r\n+\r\n+// D√©marrage du serveur\r\n app.listen(PORT, () => {\r\n   console.log(`Comment service running on port ${PORT}`);\r\n-});\n+});\r\n"
                },
                {
                    "date": 1744735361188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require('express');\r\n const bodyParser = require('body-parser');\r\n const fs = require('fs');\r\n const path = require('path');\r\n-\r\n+const cors = require('cors');\r\n const app = express();\r\n const PORT = 5000;\r\n \r\n // Cr√©ation du dossier \"comments\" s'il n'existe pas\r\n"
                },
                {
                    "date": 1744735626008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,25 +5,30 @@\n const cors = require('cors');\r\n const app = express();\r\n const PORT = 5000;\r\n \r\n-// Cr√©ation du dossier \"comments\" s'il n'existe pas\r\n-const commentsDir = path.join(__dirname, 'comments');\r\n+// Middlewares\r\n+app.use(cors()); // Enable CORS\r\n+app.use(bodyParser.json());\r\n+app.use(bodyParser.urlencoded({ extended: true }));\r\n \r\n-if (!fs.existsSync(commentsDir)) {\r\n-  fs.mkdirSync(commentsDir);\r\n-  console.log('Dossier \"comments\" cr√©√©.');\r\n+// Create comments directory if not exists\r\n+const COMMENTS_DIR = path.join(__dirname, 'comments');\r\n+if (!fs.existsSync(COMMENTS_DIR)) {\r\n+  fs.mkdirSync(COMMENTS_DIR, { recursive: true });\r\n+  console.log('Comments directory created');\r\n }\r\n \r\n-// Import des routes\r\n+// Routes\r\n const commentRoutes = require('./routes/commentRoutes');\r\n+app.use('/api/comments', commentRoutes); // Pr√©fixe API\r\n \r\n-// Middleware pour parser le JSON dans le corps des requ√™tes\r\n-app.use(bodyParser.json());\r\n+// Error handling middleware\r\n+app.use((err, req, res, next) => {\r\n+  console.error(err.stack);\r\n+  res.status(500).json({ error: 'Something went wrong!' });\r\n+});\r\n \r\n-// Utilisation des routes\r\n-app.use('/comments', commentRoutes);\r\n-\r\n-// D√©marrage du serveur\r\n+// Start server\r\n app.listen(PORT, () => {\r\n   console.log(`Comment service running on port ${PORT}`);\r\n-});\r\n+});\n\\ No newline at end of file\n"
                }
            ],
            "date": 1744731481681,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst app = express();\r\nconst commentRoutes = require('./routes/commentRoutes');\r\n\r\napp.use(express.json());\r\napp.use('/comments', commentRoutes);\r\n\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Comment service running on port ${PORT}`);\r\n});\r\n"
        }
    ]
}